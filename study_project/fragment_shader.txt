#version 330

in vec3 v_color;
in vec3 v_normal;
in vec3 v_position;
in vec2 v_tex_coord;

layout(location = 0) out vec4 o_color;

uniform vec3 u_light_pos;
uniform vec3 u_view_pos;
uniform sampler2D u_texture_sand;
uniform sampler2D u_texture_water;

const float gamma = 2.2;
const float ambient_strength = 0.0;
const float specular_strength = 0.1;
const vec3 light_color = vec3(1.0, 1.0, 1.0);

void main()
{
	vec3 n = normalize(v_normal);
	vec3 ambient = ambient_strength * light_color;
	vec3 light_vec = normalize(u_light_pos - v_position);

	float diff = max(dot(light_vec, n), ambient_strength);
	vec3 diffuse = diff * light_color;

	vec3 view_vector = normalize(u_view_pos - v_position);
	vec3 reflect_vec = reflect(-view_vector, n);

	vec3 halfway_vec = normalize(light_vec+view_vector);

	float spec = pow(max(dot(n, halfway_vec), specular_strength), 32);
	vec3 specular = spec * light_color;	

	vec4 sand_color = texture(u_texture_sand, v_tex_coord);
	vec4 water_color = texture(u_texture_water, v_tex_coord);
	vec4 mix_color = mix(sand_color, water_color,
						 distance(v_position, vec3(0.0))<=0.3?0.9:0);

	vec3 result = (ambient + diffuse + specular) * mix_color.rgb;
	o_color = vec4(pow(result, vec3(1.0 / gamma)), mix_color.a);
}
$